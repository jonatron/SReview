---
stages:
- test
- deb
- docker
- docker-2nd
- dockertest
- release

.build: &build
  stage: test
  services:
  - postgres:9.6
  variables:
    POSTGRES_DB: sreview
    POSTGRES_USER: sreview
    POSTGRES_PASSWORD: ""
    SREVIEWTEST_DB: sreview;host=postgres;user=sreview
  image: $CI_JOB_NAME
  before_script:
  - apt-get update; apt-get -y --no-install-recommends install inkscape ffmpeg bs1770gain
  - cpanm ExtUtils::Depends
  - cpanm --notest --installdeps .
  - perl Makefile.PL
  script:
  - make TEST_VERBOSE=1 test
  tags:
  - docker

perl:latest:
  <<: *build

perl:5.24:
  <<: *build

.deb: &deb
  stage: deb
  image: $CI_JOB_NAME
  before_script:
  - apt-get update; apt-get -y --no-install-recommends install devscripts equivs git
  - mk-build-deps -r -i -t "apt-get -y -o Debug::pkgProblemResolver=yes --no-install-recommends"
  script:
  - dpkg-buildpackage -us -uc -i -I.git
  after_script:
  - mkdir products
  - dcmd mv ../*ges products/
  - git describe > products/git-version
  artifacts:
    paths:
    - products
  tags:
  - docker

debian:stable:
  <<: *deb

debian:unstable:
  <<: *deb

.docker: &docker
  stage: docker-2nd
  dependencies:
  - debian:stable
  services:
  - docker:dind
  image: docker:stable
  tags:
  - docker
  before_script:
  - export IMAGE_TAG=$CI_REGISTRY_IMAGE/${CI_JOB_NAME#*:}:$CI_COMMIT_REF_SLUG
  - cp products/*deb dockerfiles/${CI_JOB_NAME#*:}
  - docker info
  - docker pull $IMAGE_TAG || true
  - docker pull $CI_REGISTRY_IMAGE/master:$CI_COMMIT_REF_SLUG
  script:
  - gitdesc=$(cat products/git-version)
  - cd dockerfiles/${CI_JOB_NAME#*:}
  - sed -i -e "s/@git_describe@/$gitdesc/g" Dockerfile
  - docker build --build-arg=ci_registry_image=$CI_REGISTRY_IMAGE --build-arg=ci_commit_ref_slug=$CI_COMMIT_REF_SLUG --pull -t $IMAGE_TAG .
  after_script:
  - export IMAGE_TAG=$CI_REGISTRY_IMAGE/${CI_JOB_NAME#*:}:$CI_COMMIT_REF_SLUG
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker push $IMAGE_TAG

docker:encoder:
  <<: *docker

docker:detect:
  <<: *docker

docker:master-kube:
  <<: *docker

docker:master:
  <<: *docker
  stage: docker

docker:web:
  <<: *docker

.drelease: &drelease
  stage: release
  when: manual
  services:
  - docker:dind
  image: docker:stable
  tags:
  - docker
  script:
  - docker pull $CI_REGISTRY_IMAGE/${CI_JOB_NAME#*:}:$CI_COMMIT_REF_SLUG
  - docker tag $CI_REGISTRY_IMAGE/${CI_JOB_NAME#*:}:$CI_COMMIT_REF_SLUG $CI_REGISTRY_IMAGE/${CI_JOB_NAME#*:}:latest
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker push $CI_REGISTRY_IMAGE/${CI_JOB_NAME#*:}:latest

release:encoder:
  <<: *drelease

release:master:
  <<: *drelease

release:master-kube:
  <<: *drelease

release:web:
  <<: *drelease

validate:web:
  # This actually requires
  # https://gitlab.com/gitlab-org/gitlab-runner/merge_requests/1569 to
  # be implemented, which it currently is not yet. So, for now, allow
  # this to fail.
  allow_failure: true
  stage: dockertest
  services:
  - name: postgres:latest
    alias: postgresql
  - name: $CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_SLUG
    alias: web
  variables:
    POSTGRES_USER: sreview
    POSTGRES_DB: sreview
    SREVIEW_DBISTRING: '"dbi:Pg:dbname=sreview;host=postgres;user=sreview"'
    SREVIEW_ADMINUSER: '"test@example.com"'
    SREVIEW_ADMINPW: '"foo"'
    BASEURL: http://web:8080/
  image: $CI_REGISTRY_IMAGE/encoder:$CI_COMMIT_REF_SLUG
  script:
  - perl dockerfiles/tests/test.pl
